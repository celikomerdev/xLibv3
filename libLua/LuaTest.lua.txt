-- LuaTest
local UnityEngine = CS.UnityEngine
local xLib = CS.xLib
local Debug = UnityEngine.Debug
local xValueClass = xLib.xValueClass
local ValueFloat = xLib.xValueClass.ValueFloat







-- --return object with key
-- function Call()
-- 	Debug.Log("Call")
-- 	ValueFloat.GetGlobal("DefaultGlobal").Value = 8
-- 	ValueFloatListener{item=ValueFloat.GetGlobal("DefaultGlobal"),register=true,call=ListenerItem}
-- end


-- function ValueFloatListener(table)
-- 	table.item.Listener(table.register,table.call)
-- end


-- function ListenerItem()
-- 	-- Debug.Log("Listener:"..ValueFloat)
-- end




--register listener to button
function Call()
	Debug.Log("Call")
	
	self:GetComponent("Slider").onValueChanged:AddListener
	(
		function()
			Debug.Log("Callback")
		end
	)
end



-- --register listener to button
-- function Call()
-- 	Debug.Log("Call")
	
-- 	self:GetComponent("Button").onClick:AddListener
-- 	(
-- 		function()
-- 			Debug.Log("Callback")
-- 		end
-- 	)
-- end





-- function Call()
-- 	Debug.Log("Call")
-- 	ValueFloat.GetGlobal("DefaultGlobal").Value = 8
-- 	ValueFloat.GetGlobal("DefaultGlobal"):Listener(true,ListenerItem)
-- 	ValueFloat.GetGlobal("DefaultGlobal").Value = 9
-- end

-- function ListenerFunction(valueListen)
-- 	Debug.Log("Listener:"..ValueFloat)
-- end





-- function Call()
-- 	Debug.Log("Call")
	
-- 	ValueFloat.GetGlobal("DefaultGlobal"):Listener(true,
-- 	function()
-- 		Debug.Log("ListenResult")
-- 	end)
-- end








-- --return object with key
-- function Call()
-- 	Debug.Log("Call")
	
-- 	GetGlobalValueFloat{key="DefaultGlobal"}.Value = 8
-- 	local returnValue = GetGlobalValueFloat{key="DefaultGlobal"}
-- 	Debug.Log("returnValue:"..returnValue.Value)
-- end

-- function GetGlobalValueFloat(table)
-- 	Debug.Log("GetGlobalValueFloat:"..table.key)
-- 	return ValueFloat.GetGlobal(table.key)
-- end






-- --return string with key
-- function Call()
-- 	Debug.Log("Call")
	
-- 	local returnValue = GetValueWith{key="DefaultGlobal"}
-- 	Debug.Log("returnValue:"..returnValue)
-- end

-- function GetValueWith(table)
-- 	Debug.Log("GetValueWith:"..table.key)
-- 	return table.key
-- end




-- --call with table
-- function CallWithValue(table)
-- 	-- CallWithValue{key=135} named args
-- 	Debug.Log("CallWithValue"..table.key)
-- end



-- --int comparision
-- function Call_3()
-- 	Debug.Log("Call")
	
-- 	ValueFloat.GetGlobal("DefaultGlobal").Value = 8
-- 	Debug.Log(ValueFloat.GetGlobal("DefaultGlobal").Value)
	
-- 	local DefaultGlobal = ValueFloat.GetGlobal("DefaultGlobal").Value
	
-- 	if DefaultGlobal >=5 then
-- 		Debug.Log("DefaultGlobal >= 5")
-- 	elseif DefaultGlobal >=0 then
-- 		Debug.Log("DefaultGlobal >= 0")
-- 	else
-- 		Debug.Log("DefaultGlobal <= 0")
-- 	end
	
-- end


-- --basic debug
-- function Call_2()
-- 	Debug.Log("Call",self)
-- end